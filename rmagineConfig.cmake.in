# -----------------------------------------------------------------
# lvr's cmake configuration
#
# provided interface variables:
# - rmagine_INCLUDE_DIRS
# - rmagine_LIBRARIES
# - rmagine_DEFINITIONS
# 
#
# Do not forget to add_defintions(${rmagine_DEFINITIONS}) as they
# describe the build configuration of liblvr.
#
# -----------------------------------------------------------------
@PACKAGE_INIT@

#include("${CMAKE_CURRENT_LIST_DIR}/rmagineTargets.cmake")



###########
### INCLUDE
###########
set(rmagine_INCLUDE_DIRS @CMAKE_INSTALL_INCLUDEDIR@)

###########
### LIBRARY
###########

# RMAGINE CORE LIB
set(rmagine_LIBRARY rmagine)
set(rmagine_LIBRARIES rmagine)
set(rmagine_LIBRARY_STATIC rmagine_static)
set(rmagine_LIBRARIES_STATIC rmagine_static)

# RMAGINE EMBREE LIB
if(@embree_FOUND@)
    list(APPEND rmagine_LIBRARIES rmagine_embree)
    list(APPEND rmagine_LIBRARIES_STATIC rmagine_embree_static)
    set(rmagine_embree_LIBRARY rmagine_embree)
    set(rmagine_embree_LIBRARY_STATIC rmagine_embree_static)
    set(rmagine_embree_FOUND 1)
else(@embree_FOUND@)
    set(rmagine_embree_FOUND 0)
endif(@embree_FOUND@)

# RMAGINE CUDA LIB
if(@CUDA_FOUND@)
    list(APPEND rmagine_LIBRARIES rmagine_cuda)
    list(APPEND rmagine_LIBRARIES_STATIC rmagine_cuda_static)
    set(rmagine_cuda_LIBRARY rmagine_cuda)
    set(rmagine_cuda_LIBRARY_STATIC rmagine_cuda_static)
    set(rmagine_cuda_FOUND 1)
else(@CUDA_FOUND@)
    set(rmagine_cuda_FOUND 0)
endif(@CUDA_FOUND@)

# RMAGINE OptiX LIB
if(@OptiX_FOUND@)
    list(APPEND rmagine_LIBRARIES rmagine_optix)
    list(APPEND rmagine_LIBRARIES_STATIC rmagine_optix_static)
    set(rmagine_optix_LIBRARY rmagine_optix)
    set(rmagine_optix_LIBRARY_STATIC rmagine_optix_static)
    set(rmagine_optix_FOUND 1)
else(@OptiX_FOUND@)
    set(rmagine_optix_FOUND 0)
endif(@OptiX_FOUND@)

# Use this?
# set(rmagine_DEFINITIONS @rmagine_DEFINITIONS@)

############
### EXTERNAL
############

find_package(Boost REQUIRED)

# OpenMP
find_package(OpenMP)
if(OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif(OPENMP_FOUND)

# Assimp
list(APPEND rmagine_INCLUDE_DIRS @ASSIMP_INCLUDE_DIRS@)
list(APPEND rmagine_LIBRARIES @ASSIMP_LIBRARIES@)
list(APPEND rmagine_ext_LIBRARIES @ASSIMP_LIBRARIES@)

# Embree
if(@embree_FOUND@)
    list(APPEND rmagine_LIBRARIES @embree_LIBRARY@)
    list(APPEND rmagine_ext_LIBRARIES @embree_LIBRARY@)
endif(@embree_FOUND@)

# CUDA
if(@CUDA_FOUND@)
    list(APPEND rmagine_INCLUDE_DIRS @CUDA_INCLUDE_DIRS@)
    list(APPEND rmagine_LIBRARIES @CUDA_LIBRARIES@)
    list(APPEND rmagine_LIBRARIES @CUDA_CUDA_LIBRARY@)
    list(APPEND rmagine_ext_LIBRARIES @CUDA_LIBRARIES@)
    list(APPEND rmagine_ext_LIBRARIES @CUDA_CUDA_LIBRARY@)
endif(@CUDA_FOUND@)

if(@OptiX_FOUND@)
    list(APPEND rmagine_INCLUDE_DIRS @OptiX_INCLUDE_DIRS@)
    list(APPEND rmagine_LIBRARIES @OptiX_LIBRARIES@)
    list(APPEND rmagine_ext_LIBRARIES @OptiX_LIBRARIES@)
endif(@OptiX_FOUND@)

set(rmagine_FOUND TRUE)