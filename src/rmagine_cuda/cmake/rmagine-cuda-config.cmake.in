@PACKAGE_INIT@

include(${CMAKE_CURRENT_LIST_DIR}/rmagine-cuda-config-version.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/rmagine-cuda-targets.cmake)

# include(CMakeFindDependencyMacro)
# find_dependency(Eigen3)
# find_dependency(assimp)

check_required_components(cuda)

set(rmagine_cuda_FOUND 1)


# This is a temporary workaround, so that the user doesnt have to include CUDA all the time
# I rather want to add the CUDA targets to my targets properly
include(CheckLanguage)
check_language(CUDA)
if(CMAKE_CUDA_COMPILER)
    message(STATUS "Cuda language available!")

    find_package(CUDAToolkit QUIET)
    if(CUDAToolkit_FOUND)
        message(STATUS "Found Cuda Toolkit!")
        enable_language(CUDA)
        set(CUDA_FOUND True)
        set(CUDA_LIBRARIES CUDA::cudart)
        set(CUDA_cusolver_LIBRARY CUDA::cusolver)
        set(CUDA_cublas_LIBRARY CUDA::cublas)
        set(CUDA_DRIVER_LIBRARY CUDA::cuda_driver)
        set(CUDA_INCLUDE_DIRS "") # is in target instead
    else()
        find_package(CUDA)
        if(CUDA_FOUND)
            message(STATUS "Found Cuda!")
            enable_language(CUDA)
            set(CUDA_DRIVER_LIBRARY cuda)
        else()
            message(STATUS "Neither CudaToolkit nor CUDA found!")
        endif(CUDA_FOUND)
    endif(CUDAToolkit_FOUND)
endif(CMAKE_CUDA_COMPILER)
